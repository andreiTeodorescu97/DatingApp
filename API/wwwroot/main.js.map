{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/lists/lists.component.html","./src/app/lists/lists.component.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n\n  baseUrl = environment.apiUrl;\n  validationErrors : string[] = []; //string array\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error(){\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400Error(){\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get500Error(){\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get401Error(){\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400ValidationError(){\n    this.http.post(this.baseUrl + 'account/register',{}).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n      this.validationErrors = error;\n    })\n  }\n\n}\n","<ng-container>\n    <button class=\"btn btn-outline-primary mr-3\" (click)=\"get500Error()\"> \n        Test 500 Error\n    </button>\n    <button class=\"btn btn-outline-primary mr-3\" (click)=\"get400Error()\"> \n        Test 400 Error\n    </button>\n    <button class=\"btn btn-outline-primary mr-3\" (click)=\"get401Error()\"> \n        Test 401 Error\n    </button>\n    <button class=\"btn btn-outline-primary mr-3\" (click)=\"get404Error()\"> \n        Test 404 Error\n    </button>\n    <button class=\"btn btn-outline-primary mr-3\" (click)=\"get400ValidationError()\"> \n        Test 400 Validation Error\n    </button>\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>","<div class=\"form-group\">\n        <input \n            type=\"text\"\n            [class.is-invalid]='ngControl.touched && ngControl.invalid'\n            class=\"form-control\"\n            [formControl]='ngControl.control'\n            placeholder=\"{{label}}\"\n            bsDatepicker\n            [bsConfig]='bsConfig'\n            [maxDate]='maxDate'\n        >\n\n        <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\n            {{label}} is required\n        </div>\n</div>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n\n  @Input() label : string;\n  @Input() maxDate: Date;\n  locale = 'ro';\n  \n  //we can provide only some of the configuration option from bsdatepicker\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngControl : NgControl, private localeService: BsLocaleService) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY',\n      \n    }\n    this.localeService.use(this.locale);\n   }\n\n  writeValue(obj: any): void {\n  }\n  registerOnChange(fn: any): void {\n      }\n  registerOnTouched(fn: any): void {\n     }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  /* @Input() usersFromHomeComponent: any; */\n  @Output() cancelRegister = new EventEmitter();\n  model: any = {};\n  registerForm: FormGroup;\n  maxDate: Date;\n  validationErrors : string[] = [];\n\n  constructor(private accountService: AccountService, \n    private toastr: ToastrService, \n    private fb: FormBuilder, private router:Router) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  initializeForm(){\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      \n      password: ['',\n      [Validators.required, \n        Validators.minLength(6),\n        Validators.pattern(/^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\D*\\d).{6,}$/),\n        Validators.maxLength(15)]],\n\n      confirmPassword: ['',\n      [Validators.required, \n        this.matchValues('password')]]\n    })\n/*     this.registerForm.controls.password.valueChanges.subscribe(() => {\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\n    }) */\n  };\n\n  matchValues(matchTo : string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.controls[matchTo].value ? \n      null : {isMatching: true}\n    }\n  }\n\n  register() {\n    this.accountService.register(this.registerForm.value).subscribe(response => {\n      this.router.navigateByUrl('/members');\n      this.cancel();\n    }, error => {\n      this.validationErrors = error;\n    })\n  };\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","<form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\n    <h2 class=\"text-center text-primary\">Sign Up</h2>\n    <hr>\n\n    <div class=\"form-group\">\n        <label class=\"control-label\" style=\"margin-right: 10px;\">I am a:</label>\n        <label class=\"radio-inline\">\n            <input type=\"radio\" value='male' formControlName='gender'> Male\n        </label>\n        <label class=\"radio-inline\">\n            <input type=\"radio\" value='female' class=\"ml-3\" formControlName='gender'> Female\n        </label>\n    </div>\n\n    <app-text-input [formControl]='registerForm.controls[\"username\"]'\n        [label]='\"Username\"'>\n    </app-text-input>\n\n    <app-text-input [formControl]='registerForm.controls[\"knownAs\"]'\n    [label]='\"Known As\"'>\n    </app-text-input>\n\n    <app-date-input [formControl]='registerForm.controls[\"dateOfBirth\"]'\n    [label]='\"Date of Birth\"' [maxDate]='maxDate'>\n    </app-date-input>\n\n    <app-text-input [formControl]='registerForm.controls[\"city\"]'\n    [label]='\"City\"'>\n    </app-text-input>\n\n    <app-text-input [formControl]='registerForm.controls[\"country\"]'\n    [label]='\"Country\"'>\n    </app-text-input>\n\n    <app-text-input [formControl]='registerForm.controls[\"password\"]' \n    [label]='\"Password\"' \n    [type]='\"password\"'>\n    </app-text-input>\n\n    <app-text-input [formControl]='registerForm.controls[\"confirmPassword\"]' \n    [label]='\"Confirm Password\"' \n    [type]='\"password\"'>\n    </app-text-input>\n\n   <!--  <div class=\"form-group\">\n        <input \n        [class.is-invalid]='registerForm.get(\"username\").errors \n        && registerForm.get(\"username\").touched'\n        type=\"text\" class=\"form-control\"  \n        formControlName=\"username\"\n        placeholder=\"Username\">\n        <div class=\"invalid-feedback\">\n            Please enter a username!\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <input \n        [class.is-invalid]='registerForm.get(\"password\").errors \n        && registerForm.get(\"password\").touched'\n        type=\"password\" class=\"form-control\" \n        formControlName=\"password\"\n        placeholder=\"Password\">\n\n        <div class=\"invalid-feedback\" \n        *ngIf=\"registerForm.get('password').hasError('required')\">\n            Please enter a password!\n        </div>\n\n        <div class=\"invalid-feedback\" \n        *ngIf=\"registerForm.get('password').hasError('minlength')\">\n            Password must be at least 4 chars!\n        </div>\n\n        <div class=\"invalid-feedback\" \n        *ngIf=\"registerForm.get('password').hasError('maxlength')\">\n            Password must be at most 8 chars!\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <input\n        [class.is-invalid]='registerForm.get(\"confirmPassword\").errors \n        && registerForm.get(\"confirmPassword\").touched'\n        type=\"password\" class=\"form-control\" \n        formControlName=\"confirmPassword\"\n        placeholder=\"Confirm Password\">\n\n        <div class=\"invalid-feedback\" \n        *ngIf=\"registerForm.get('confirmPassword').hasError('required')\">\n            Please enter a confirmed password!\n        </div>\n\n        <div class=\"invalid-feedback\" \n        *ngIf=\"registerForm.get('confirmPassword').hasError('isMatching')\">\n            Passwords do not match!\n        </div>\n    </div> -->\n\n    <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n\n    \n    <div class=\"form-group text-center\">\n        <button class=\"btn btn-success mr-2\"\n        [disabled]='!registerForm.valid' \n        type=\"submit\">Register</button>\n\n        <button class=\"btn btn-danger mr-2\" (click)=\"cancel()\" \n        type=\"button\">Cancel</button>\n\n    </div>\n</form>\n<p> Form value: {{registerForm.value | json}}</p>\n<p> Form value: {{registerForm.status | json}}</p>\n\n<!--     <div class=\"form-group\">\n        <label> What is you fav user?</label>\n        <select class=\"form-control\">\n            <option *ngFor=\"let user of usersFromHomeComponent\" [value]=\"user.userName\">\n                {{user.userName}}\n            </option>\n        </select>\n    </div> -->","<div class=\"card\">\r\n    <div class=\"card-body\"\r\n            #scrollMe\r\n            style=\"overflow: scroll; height:535px; overflow-x: hidden;\"\r\n            [scrollTop]=\"scrollMe.scrollHeight\"\r\n        >\r\n        <div *ngIf=\"(messagesService.messageThread$ | async)?.length === 0\">\r\n            No messages yet... say hi by using the message box below\r\n        </div>\r\n        <ul \r\n            *ngIf=\"(messagesService.messageThread$ | async).length > 0\" \r\n            class=\"chat\">\r\n            <li *ngFor=\"let message of (messagesService.messageThread$ | async)\">\r\n                <div>\r\n                    <span class=\"chat-image float-right\">\r\n                        <img class=\"rounded-circle\" \r\n                            src=\"{{message.senderPhotoUrl || './assets/user.png'}}\"\r\n                            alt=\"{{message.senderUsername}}\">\r\n                    </span>\r\n                    <div class=\"chat-body\">\r\n                        <div class=\"header\">\r\n                            <small class=\"text-muted\">\r\n                                <span class=\"fa fa-clock-o\">\r\n                                    {{message.messageSent | timeago}}\r\n                                </span>\r\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead \r\n                                    && message.senderUsername !== username\">\r\n                                    (unread)\r\n                                </span>\r\n                                <span class=\"text-success\" *ngIf=\"message.dateRead \r\n                                    && message.senderUsername !== username\">\r\n                                    (read {{message.dateRead | timeago}})\r\n                                </span>\r\n                            </small>\r\n                        </div>\r\n                        <p>{{message.content}}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n            <div class=\"input-group\">\r\n                <input \r\n                    name=\"messageContent\"\r\n                    required\r\n                    [(ngModel)]=\"messageContent\"\r\n                    type=\"text\" \r\n                    class=\"form-control input-sm\" \r\n                    placeholder=\"Send a private message\">\r\n                <div class=\"input-group-append\">\r\n                    <button \r\n                        [disabled]=\"!messageForm.valid || loading\"\r\n                        class=\"btn btn-primary\" \r\n                        type=\"submit\">\r\n                        Send\r\n                        <i  *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css']\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n\r\n  @ViewChild('messageForm') messageForm : NgForm;\r\n  @Input() messages: Message[];\r\n  @Input() username: string;\r\n  messageContent : string;\r\n  loading = false;\r\n\r\n  constructor(public messagesService : MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage(){\r\n    this.loading = true;\r\n    this.messagesService.sendMessage(this.username, this.messageContent).then(() => {\r\n        this.messageForm.reset();\r\n      }).finally(() => this.loading = false);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not found</h1>\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to home page</button>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n//services are singleton\n//data gets destroys only when application is closed down\n//services are usually used for http requests\n\nexport class AccountService {\n\n  baseUrl = environment.apiUrl;\n\n  //buffer object, it will emit the last values inside it, it will store only one User (null/current user)\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private presenceService: PresenceService) { }\n\n  login(model : any){\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if(user){\n          this.setCurrentUser(user);\n          this.presenceService.createHubConnection(user);\n        }\n      })\n    );\n  }\n\n  register(model: any){\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\n      map((user : User) => {\n        if(user){\n          this.setCurrentUser(user);\n          this.presenceService.createHubConnection(user);\n        }\n        /* return user; */\n      })\n    )\n  }\n\n  setCurrentUser(user: User){\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    /* we have only one role for one member */\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout(){\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presenceService.stopHubConnection();\n  }\n\n  getDecodedToken(token)\n  {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","<h4>Internal server error! - refreshing will make the error dissapear!</h4>\n<ng-container *ngIf=\"error\">\n        <h5 class=\"text-danger\">Error : {{error.message}}</h5>\n        <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is not to blame!</p>\n        <p>What to do next?</p>\n        <ol>\n            <li>Open the chrome dev tools!</li>\n            <li>Inspect the network tab</li>\n            <li>Check the failing requests</li>\n            <li>Examine the request URL - make sure it is corect!</li>\n            <li>Reproduce the error in postman - if we see the same response than the issue is not with Angular!</li>\n        </ol>\n        <p>Following is the stack trace - this is where your investigation should start!</p>\n        <code class=\"mr-5\" style=\"background-color:whitesmoke ;\">{{error.details}}</code>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n\n  error: any;\n\n  constructor(private router: Router) { \n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]' // *ngIf or ngFor or bsRadio (type of directives) *appHasRole - this will be specified\n})\nexport class HasRoleDirective implements OnInit{\n\n  @Input() appHasRole: string[];\n  user: User;\n\n  constructor(private viewContainerRef: ViewContainerRef, \n    private templateRef: TemplateRef<any>, \n    private accountService: AccountService) { \n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n        this.user = user;\n      })\n    }\n\n    ngOnInit(): void{\n      //clear view if no roles\n      if(!this.user?.roles || this.user == null){\n        this.viewContainerRef.clear();\n        return ;\n      }\n      if(this.user?.roles.some(r => this.appHasRole.includes(r))){\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n      }else{\n        this.viewContainerRef.clear();\n      }\n    }\n\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) { }\n\n  busy(){\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255,255,255,0)',\n      color:'#333333'\n    });\n  }\n\n  idle(){\n    this.busyRequestCount--;\n    if(this.busyRequestCount <= 0){\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\" style=\"text-align: center;\">\n        <h1>Find your match</h1>\n        <p class=\"lead\">Come on in to view your matches...all you need to do is sign up!</p>\n        <div class=\"text-center\">\n            <button (click)=\"registerToggle()\"  class=\"btn btn-primary btn-lg mr-2\">Register</button>\n            <button class=\"btn btn-info btn-lg\">Lean more</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"registerMode\" class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n                <!-- <app-register [usersFromHomeComponent]=\"users\" (cancelRegister)=\"cancelRegisterMode($event)\"></app-register> -->\n                <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n            </div>\n        </div>\n    </div>\n</div>","/* import { HttpClient } from '@angular/common/http'; */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMode = false;\n  /* users: any; */\n\n  constructor(/* private http:HttpClient */) { }\n\n  ngOnInit(): void {\n    /* this.getUsers(); */\n  }\n\n  registerToggle(){\n    this.registerMode = !this.registerMode;\n  }\n\n/*   getUsers(){\n    this.http.get('https://localhost:5001/api/users').subscribe(users => this.users = users);\n  } */\n\n  cancelRegisterMode(event: boolean){\n    this.registerMode = event;\n  }\n\n}\n","export interface Pagination{\r\n    currentPage : number;\r\n    itemsPerPage : number;\r\n    totalItems : number;\r\n    totalPages : number; \r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    result : T;\r\n    pagination: Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',  \n  hubUrl: 'https://localhost:5001/hubs/', \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    \n    let currentUser: User;\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\n\n    if(currentUser){\n      request = request.clone({\n        setHeaders : {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n","<div class=\"row mb-4\">\n    <div class=\"btn-group\" name='container'>\n        <button class=\"btn btn-primary\"\n            btnRadio='Unread'\n            [(ngModel)]=\"container\"\n            (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope\"></i> Unread\n        </button>\n        <button class=\"btn btn-primary\"\n            btnRadio='Inbox'\n            [(ngModel)]=\"container\"\n            (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope-open\"></i> Inbox\n        </button>\n        <button class=\"btn btn-primary\"\n            btnRadio='Outbox'\n            [(ngModel)]=\"container\"\n            (click)=\"loadMessages()\">\n            <i class=\"fa fa-paper-plane\"></i> Outbox\n        </button>\n    </div>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n    <h3>No messages</h3>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\n        <tr>\n            <th style=\"width: 40%\">Message</th>\n            <th style=\"width: 20%\">{{container === \"Outbox\" ? \"To\" : \"From\"}}</th>\n            <th style=\"width: 20%\">{{container === \"Outbox\" ? \"Sent\" : \"Received\"}}</th>\n            <th style=\"width: 20%\"></th>\n        </tr>\n        <tr [hidden]=\"loading\" *ngFor=\"let message of messages\"\n            routerLink='{{container === \"Outbox\" ? \n            \"/members/\" + message.recipientUsername : \n            \"/members/\" + message.senderUsername}}'\n            [queryParams]='{tab : 3}'\n        >\n        <td>{{message.content}}</td>\n        <td>\n           <div *ngIf=\"container === 'Outbox'\">\n              <img\n                class=\"img-circle rounded-circle mr-3\" \n                src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\" \n                alt=\"{{message.recipientUsername}}\"> \n                <strong>{{message.recipientUsername | titlecase}}</strong>\n           </div> \n           <div *ngIf=\"container === 'Inbox'\">\n            <img\n              class=\"img-circle rounded-circle mr-3\" \n              src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \n              alt=\"{{message.senderUsername}}\"> \n              <strong>{{message.senderUsername | titlecase}}</strong>\n         </div>\n        </td>\n        <td>\n            {{message.messageSent | timeago}}\n        </td>\n        <td>\n            <button class=\"btn btn-danger\"\n                (click)=\"$event.stopPropagation()\"\n                (click)=\"deleteMessage(message.id)\">\n                Delete\n            </button>\n        </td>\n        </tr>\n    </table>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n    <pagination \n        [boundaryLinks]=\"true\" \n        [totalItems]=\"pagination.totalItems\" \n        [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\"\n        (pageChanged)=\"pageChanged($event)\"\n        previousText=\"&lsaquo;\" \n        nextText=\"&rsaquo;\" \n        firstText=\"&laquo;\"\n        lastText=\"&raquo;\">\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\nimport { ConfirmService } from '../_services/confirm.service';\nimport { MessageService } from '../_services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages : Message[];\n  pagination: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(private messageService : MessageService, private confirmService : ConfirmService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n  \n  loadMessages(){\n    this.loading = true;\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container)\n    .subscribe(response => {\n      this.messages = response.result;\n      this.pagination = response.pagination;\n      this.loading = false;\n    })\n  }\n\n  deleteMessage(id : number){\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone')\n    .subscribe(result => {\n      if(result){\n        this.messageService.deleteMessage(id).subscribe(() => {\n          this.messages.splice(this.messages.findIndex(m => m.id == id), 1);\n        })\n      }\n    })\n  }\n\n  pageChanged(event : any){\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from \"ngx-bootstrap/chronos\";\nimport { roLocale } from \"ngx-bootstrap/locale\";\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\ndefineLocale(\"ro\", roLocale);\n\n//ANGULAR BOOTSTRAP COMPONENTS NEED FOR\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(), \n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if(error){\n          switch (error.status) {\n            case 400:\n              if(error.error.errors)\n              {\n                const modalStateErrors = [];\n                for(const key in error.error.errors)\n                {\n                  if(error.error.errors[key])\n                  {\n                    modalStateErrors.push(error.error.errors[key]);\n                  }\n                }\n                throw modalStateErrors.flat();\n              }else if(typeof (error.error) === 'object')\n              {\n                this.toastr.error(error.statusText === 'OK' ? 'Bad Request' : error.statusText, error.status);\n              }else{\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n\n              case 401:\n                this.toastr.error(error.statusText === 'OK' ? 'Unauthorised' : error.statusText, error.status);\n              break;\n\n              case 404:\n                this.router.navigateByUrl('/not-found');\n                break;\n\n              case 500:\n                const navigationExtras: NavigationExtras = {state: {error: error.error}};\n                this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n          \n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      }))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private accountService: AccountService, private toastr: ToastrService){}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if(user.roles.includes('Admin') || user.roles.includes('Moderator')){\n          return true;\n        }\n        this.toastr.error('You cannot enter this area!');\n      })\n    )\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUserWithRoles(){\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n\n  updateUserRoles(username: string, roles: string[]){\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  users: Partial<User[]>;\n  bsModalRef: BsModalRef;\n\n  constructor(private adminService: AdminService,\n    private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUserWithRoles()\n  }\n\n  getUserWithRoles() {\n    this.adminService.getUserWithRoles().subscribe(users => {\n      this.users = users;\n    })\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user)\n      }\n    }\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\n      const rolesToUpdate = {\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\n      };\n      if(rolesToUpdate){\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\n          user.roles = [...rolesToUpdate.roles]\n        })\n      }\n    })\n  }\n\n  private getRolesArray(user) {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      { name: 'Admin', value: 'Admin' },\n      { name: 'Moderator', value: 'Moderator' },\n      { name: 'Member', value: 'Member' }\n    ];\n\n    availableRoles.forEach(role => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    });\n    return roles;\n  }\n\n\n}\n","<div class=\"row\">\n    <table class=\"table\">\n        <tr>\n            <th style=\"width: 30%; \">Username</th>\n            <th style=\"width: 40%; \">Active roles</th>\n            <th style=\"width: 30%; \"></th>\n        </tr>\n        <tr *ngFor=\"let user of users\">\n            <td>\n                {{user.username}}\n            </td>\n            <td>\n                {{user.roles}}\n            </td>\n            <td>\n                <button class=\"btn btn-info\"\n                    (click)=\"openRolesModal(user)\">\n                    Edit Roles\n                </button>\n            </td>\n        </tr>\n    </table>\n</div>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Message } from 'src/app/_models/message';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n\n  @ViewChild('memberTabs', { static: true }) memberTabs: TabsetComponent;\n  member: Member;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  activeTab: TabDirective;\n  messages: Message[] = [];\n  user: User;\n\n  constructor(public presence: PresenceService,\n    private route: ActivatedRoute,\n    private messageService: MessageService,\n    private router: Router,\n    private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngOnInit(): void {\n    //get the data before the loading of the template/html page\n    //the resolver will get the data first than will load everything else in page\n    this.route.data.subscribe(data => {\n      this.member = data.member;\n    })\n\n    this.route.queryParams.subscribe(params => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    })\n\n    this.galleryOptions = [{\n      width: '500px',\n      height: '500px',\n      imagePercent: 100,\n      thumbnailsColumns: 4,\n      imageAnimation: NgxGalleryAnimation.Slide,\n      preview: false\n    }];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n    for (const photo of this.member.photos) {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url,\n      })\n    }\n    return imageUrls;\n  }\n\n  loadMessages() {\n    this.messageService.getMessageThread(this.member.userName).subscribe(messages => {\n      this.messages = messages;\n    })\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  onTabActivated(data: TabDirective) {\n    this.activeTab = data;\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\n      this.messageService.createHubConnection(this.user, this.member.userName);\n    } else {\n      this.messageService.stopHubConnection();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n}\n","<div class=\"row\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async).includes(member.userName)\">\r\n                    <i class=\"fa fa-user-circle text-success\"></i>Online now\r\n                </div>\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created | date : 'dd MMMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"btn-group d-flex\">\r\n                    <button class=\"btn btn-primary\">Like</button>\r\n                    <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- 3 is the id of the messages tab -->\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n            <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">            \r\n                <h4>Description</h4>\r\n                <p>{{member.introduction}}</p>\r\n                <h4>Looking for</h4>\r\n                <p>{{member.lookingFor}}</p>\r\n            </tab>\r\n            <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">            \r\n                <p>{{member.interests}}</p>\r\n            </tab>\r\n            <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">            \r\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\" \r\n                style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n            </tab>\r\n            <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">            \r\n                <app-member-messages [username]=\"member.userName\"></app-member-messages>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n//automatically subcribes to any observables\nexport class AuthGuard implements CanActivate {\n\n  constructor(private accountService: AccountService, private toastr: ToastrService){}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if(user) return true;\n        this.toastr.error('You shall not pass!');\n      })\n    );\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Group } from '../_models/group';\r\nimport { Message } from '../_models/message';\r\nimport { User } from '../_models/user';\r\nimport { BusyService } from './busy.service';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n  \r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) { }\r\n\r\n  createHubConnection(user: User, otherUsername: string){\r\n    this.busyService.busy();\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build()\r\n\r\n      this.hubConnection.start()\r\n      .catch(error => console.log(error))\r\n      .finally(() => this.busyService.idle());\r\n\r\n      this.hubConnection.on('ReceiveMessageThread', messages => {\r\n        this.messageThreadSource.next(messages);\r\n      })\r\n\r\n      this.hubConnection.on('NewMessage', message => {\r\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n          this.messageThreadSource.next([...messages, message]);\r\n        })\r\n      })\r\n\r\n      this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n        if(group.connections.some(x => x.username === otherUsername)){\r\n          this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n            messages.forEach(message => {\r\n              if(!message.dateRead){\r\n                message.dateRead = new Date(Date.now());\r\n              }\r\n            })\r\n            this.messageThreadSource.next([...messages]);\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  stopHubConnection(){\r\n    if(this.hubConnection){\r\n      this.messageThreadSource.next([])\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber, pageSize, container){\r\n\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n\r\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\r\n  }\r\n\r\n  getMessageThread(username: string){\r\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\r\n  }\r\n\r\n  async sendMessage(username : string, content : string){\r\n      return this.hubConnection.invoke('SendMessage',\r\n        {recipientUsername: username, content: content })\r\n      .catch(error => console.log(error));\r\n    }\r\n\r\n  deleteMessage(id : number){\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\n    <h2>Your matches {{pagination?.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\n        <div class=\"form-group\">\n            <label>Age from:</label>\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"minAge\" \n            [(ngModel)]=\"userParams.minAge\"> \n        </div>\n\n        <div class=\"form-group px-2\">\n            <label>Age to:</label>\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"maxAge\" \n            [(ngModel)]=\"userParams.maxAge\"> \n        </div>\n\n        <div class=\"form-group px-2\">\n            <label>Show:</label>\n            <select name=\"gender\" [(ngModel)]=\"userParams.gender\" style=\"width: 130px;\" class=\"form-control ml-1\">\n                <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n                    {{gender.display}}\n                </option>\n            </select>\n        </div>\n\n        <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\n        <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">Reset Filters</button>\n        <div class=\"col\">\n            <div class=\"btn-group float-right\">\n                <button\n                    type=\"button\" \n                    class=\"btn btn-primary\" \n                    name='orderBy' \n                    (click)=\"loadMembers()\"\n                    btnRadio='lastActive'\n                    [(ngModel)]=\"userParams.orderBy\">\n                    Last Active\n                </button>\n                <button\n                    type=\"button\" \n                    class=\"btn btn-primary\" \n                    name='orderBy' \n                    (click)=\"loadMembers()\"\n                    btnRadio='created'\n                    [(ngModel)]=\"userParams.orderBy\">\n                    Newest Members\n            </button>\n            </div>\n        </div>\n\n    </form>\n</div>\n\n<div class=\"row\">\n    <!-- <div *ngFor=\"let member of members$ | async\" class=\"col-2\"> -->\n    <div *ngFor=\"let member of members\" class=\"col-2\">\n        <app-member-card [member]=\"member\"></app-member-card>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination \n        [boundaryLinks]=\"true\" \n        [totalItems]=\"pagination.totalItems\" \n        [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\"\n        (pageChanged)=\"pageChanged($event)\"\n        previousText=\"&lsaquo;\" \n        nextText=\"&rsaquo;\" \n        firstText=\"&laquo;\"\n        lastText=\"&raquo;\">\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  \n  //$ FOR OBSERVABLES\n  /* members$: Observable<Member[]>; */\n\n  members : Member[];\n  pagination: Pagination;\n  userParams: UserParams;\n  user: User;\n\n  genderList = [{value: 'male', display: 'Males'} ,{value: 'female', display: 'Females'}];\n\n  constructor(private memberService : MembersService) { \n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    /* this.members$ = this.memberService.getMembers(); */\n    this.loadMembers();\n  }\n\n  loadMembers(){\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  resetFilters(){\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any){\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating App';\n  users: any;\n\n  constructor(private accountService: AccountService, private presenceService: PresenceService){}\n\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser(){\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if(user){\n      this.accountService.setCurrentUser(user);\n      this.presenceService.createHubConnection(user);\n    }\n  }\n}\n","<ngx-spinner>\r\n   <h3>Loading...</h3>\r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n\r\n<div class=\"container\" style=\"margin-top: 100px;\">\r\n   <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService :BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n     /*  delay(1000), */\n      finalize(() => {\n        this.busyService.idle();\n\n      })\n    )\n    this.busyService.idle();\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { NULL_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Injectable } from '@angular/core';\nimport { of, pipe } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_models/member';\nimport { PaginatedResult } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n/* const httpOptions = {\n  headers: new HttpHeaders({\n    Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('user'))?.token\n  })\n} */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n\n  //map is like a dictionary\n  memberCache = new Map();\n  userParams: UserParams;\n  user: User;\n\n  constructor(private http: HttpClient, private accountService: AccountService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    })\n  }\n\n  getUserParams(){\n    return this.userParams;\n  }\n\n  setUserParams(params: UserParams){\n    this.userParams = params;\n  }\n\n  resetUserParams(){\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n  getMembers(userParams: UserParams) {\n\n    console.log(Object.values(userParams).join('-'));\n\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    if(response){\n      return of(response);\n    }\n\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\n      .pipe(map(response => {\n        this.memberCache.set(Object.values(userParams).join('-'), response);\n        return response;\n      }))\n  };\n\n  getMember(username: string) {\n    const member = [...this.memberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((member:Member) => member.userName === username);\n\n      if(member){\n        return of(member);\n      }\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    )\n  }\n\n  setMainPhoto(photoId: number) {\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\n  }\n\n  deletePhoto(photoId: number) {\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\n\n  }\n\n  addLike(username : string){\n    return this.http.post(this.baseUrl + 'likes/' + username, {})\n  }\n\n  getLikes(predicate: string, pageNumber, pageSize){\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('predicate', predicate);\n\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\n  }\n\n  \n\n\n}\n","/* Angular specific stuff */\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n/* App stuff */\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberDetailComponent,\n    MemberListComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    NgxSpinnerModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n\n  @Input() member: Member;\n  uploader: FileUploader;\n  hasBaseDropzoneOver = false;\n  baseUrl = environment.apiUrl;\n  user: User;\n\n  constructor(private accountService : AccountService, \n    private memberService : MembersService) {\n    //gives acces to the current logged in user\n    this.accountService.currentUser$.pipe(take(1)).subscribe(\n      user => this.user = user);\n   }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e : any){\n    this.hasBaseDropzoneOver = e;\n  }\n\n  initializeUploader(){\n    this.uploader = new FileUploader({\n      url : this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType : ['image'],\n      removeAfterUpload : true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    }\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if(response) {\n        const photo : Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if(photo.isMain){\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    }\n  }\n\n  setMainPhoto(photo : Photo){\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach(p=> {\n        if(p.isMain) p.isMain = false;\n        if(p.id === photo.id){\n            p.isMain = true;\n        }\n      })\n    })\n  }\n\n  deletePhoto(photoId : number){\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this.member.photos.filter(x => x.id !== photoId);\n    })\n  }\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\n        <div class=\"text-center\">\n            <button \n            [disabled]=\"photo.isMain\"\n            (click)=\"setMainPhoto(photo)\"\n            [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\"'\n            class=\"btn btn-sm\">Main\n        </button>\n            <button \n            [disabled]=\"photo.isMain\"\n            (click)=\"deletePhoto(photo.id)\"\n            class=\"btn btn-sm btn-danger\">\n            <i class=\"fa fa-trash\"></i></button>\n        </div>\n    </div>\n</div>\n\n<div class=\"row mt-3\">\n \n    <div class=\"col-md-3\">\n\n        <h3>Add photos</h3>\n\n        <div ng2FileDrop\n             [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\n             (fileOver)=\"fileOverBase($event)\"\n             [uploader]=\"uploader\"\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n             <i class=\"fa fa-upload fa-3x\"></i>\n            Drop photos here\n        </div>\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n    <div class=\"col-md-9\" *ngIf=\"uploader?.queue?.length\" style=\"margin-bottom: 40px\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n            <tr>\n                <th width=\"50%\">Name</th>\n                <th>Size</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of uploader.queue\">\n                <td><strong>{{ item?.file?.name }}</strong></td>\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n            </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <div>\n                Queue progress:\n                <div class=\"progress\" style=\"\">\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\"\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"fa fa-uploade\"></span> Upload all\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                <span class=\"fa fa-ban\"></span> Cancel all\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                <span class=\"fa fa-trash\"></span> Remove all\n            </button>\n        </div>\n\n    </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Member } from '../_models/member';\nimport { MembersService } from '../_services/members.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MemberDetailedResolver implements Resolve<Member> {\n\n  constructor(private memberService : MembersService){}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\n    return this.memberService.getMember(route.paramMap.get('username'));\n  }\n}\n","<div class=\"form-group\">\n    <input\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n    type={{type}} \n    class=\"form-control\" \n    [formControl]=\"ngControl.control\"\n    placeholder={{label}}>\n\n    <div class=\"invalid-feedback\" \n    *ngIf=\"ngControl.control.errors?.required\">\n        Please enter a {{label}}!\n    </div>\n\n    <!-- IMPORTANT isMatching!!!!!!! -->\n    <div class=\"invalid-feedback\" \n    *ngIf=\"ngControl.control.errors?.minlength\">\n        {{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}}!\n    </div>\n\n    <div class=\"invalid-feedback\" \n    *ngIf=\"ngControl.control.errors?.maxlength\">\n    {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}}!\n    </div>\n\n    <div class=\"invalid-feedback\" \n    *ngIf=\"ngControl.control.errors?.pattern\">\n    Password must contain at least: one lower case, one upper case, one digit and one special character!\n    </div>\n\n    <div class=\"invalid-feedback\" \n    *ngIf=\"ngControl.control.errors?.isMatching\">\n        Passwords do not match!\n    </div>\n</div>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n\n  @Input() label: string;\n  @Input() type = 'text';\n\n  constructor(@Self() public ngControl: NgControl) { \n    this.ngControl.valueAccessor = this;\n  }\n\n  writeValue(obj: any): void {\n  }\n\n  registerOnChange(fn: any): void {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"btn-group\" name=\"predicate\">\n            <button class=\"btn btn-primary\" \n            btnRadio=\"liked\" \n            [(ngModel)]=\"predicate\" \n            (click)=\"loadLikes()\">Members I like</button>\n            <button class=\"btn btn-primary\" \n            btnRadio=\"likedBy\" \n            [(ngModel)]=\"predicate\" \n            (click)=\"loadLikes()\">Members who like me</button>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\">\n        <div class=\"col-2\" *ngFor=\"let member of members\">\n            <app-member-card [member]=\"member\">\n            </app-member-card>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination \n        [boundaryLinks]=\"true\" \n        [totalItems]=\"pagination.totalItems\" \n        [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\"\n        (pageChanged)=\"pageChanged($event)\"\n        previousText=\"&lsaquo;\" \n        nextText=\"&rsaquo;\" \n        firstText=\"&laquo;\"\n        lastText=\"&raquo;\">\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n\n  members : Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 2;\n  pagination : Pagination;\n\n\n  constructor(private memberService : MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes(){\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  pageChanged(event: any){\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink='/' routerLinkActive='active'>Dating App</a>\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <ng-container *ngIf='accountService.currentUser$ | async'>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive='active'>Matches</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/lists\" routerLinkActive='active'>Lists</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/messages\" routerLinkActive='active'>Messages</a>\r\n        </li>\r\n        <li *appHasRole='[\"Admin\",\"Moderator\"]' class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive='active'>Admin</a>\r\n        </li>\r\n      </ng-container>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/errors\" routerLinkActive='active'>Errors</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <div class=\"btn-group\" *ngIf='(accountService.currentUser$ | async) as user' dropdown>\r\n      <img src=\"{{user.photoUrl|| './assets/user.png'}} \" alt=\"{{user.username}}\">\r\n      <button id=\"button-animated\" dropdownToggle type=\"button\" class=\"btn btn-primary dropdown-toggle\"\r\n        aria-controls=\"dropdown-animated\">Welcome {{user.knownAs || user.username | titlecase}}<span class=\"caret\"></span>\r\n      </button>\r\n      <ul id=\"dropdown-animated\" *dropdownMenu class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"button-animated\">\r\n        <li role=\"menuitem\">\r\n          <a routerLink=\"/member/edit\" class=\"dropdown-item\">Edit Profile</a>\r\n        <li role=\"menuitem\">\r\n          <a class=\"dropdown-item\" (click)=\"logout()\"> Logout</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <form *ngIf='(accountService.currentUser$ | async) === null' #loginForm=\"ngForm\" class=\"form-inline mt-2 mt-md-0\"\r\n      (ngSubmit)=\"login()\" autocomplete=\"off\">\r\n      <input name=\"username\" [(ngModel)]=\"model.username\" class=\"form-control mr-sm-2\" type=\"search\"\r\n        placeholder=\"Username\">\r\n      <input name=\"password\" [(ngModel)]=\"model.password\" class=\"form-control mr-sm-2\" type=\"password\"\r\n        placeholder=\"Password\">\r\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n/* import { Observable } from 'rxjs';\nimport { User } from '../_models/user'; */\n\n\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  model: any = {}\n\n  constructor(public accountService: AccountService, private router: Router, \n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.accountService.login(this.model).subscribe(response => {\n      this.router.navigateByUrl('/members');\n    })\n  };\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  };\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n\n  @Input() member : Member;\n  \n  constructor(private memberService: MembersService, \n    private toastr: ToastrService,\n    public presence: PresenceService) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  addLike(member : Member){\n    this.memberService.addLike(member.userName).subscribe(() => {\n      this.toastr.success('You have liked ' + member.knownAs);\n    })\n  }\n\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\n        <ul class=\"list-inline member-icons animate text-center\">\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\" routerLink=\"/members/{{member.userName}}\"><i class=\"fa fa-user\"></i></button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\" (click)=\"addLike(member)\"\n                ><i class=\"fa fa-heart\"></i></button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\"\n                    routerLink='/members/{{member.userName}}'\n                    [queryParams]='{tab : 3}'>\n                    <i class=\"fa fa-envelope\"></i>\n                </button>\n            </li>\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\">\n            <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.userName)\">            \n                <i class=\"fa fa-user mr-2\"></i>\n            </span>\n            {{member.knownAs}}, {{member.age}}\n        </h6>\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\n    </div>\n</div>","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection(user: User){\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection\n      .start()\n      .catch(error => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames, username])\n      })\n    })\n\n    this.hubConnection.on('UserIsOffline', username =>{\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)])\n      })\n    })\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    })\n\n    this.hubConnection.on('NewMessageReceived', ({username, knowAs}) => {\n      this.toastr.info(knowAs + ' has sent you a new message!')\n      .onTap\n      .pipe(take(1))\n      .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\n    })\n  }\n\n  stopHubConnection(){\n    this.hubConnection.stop().catch(error => console.log(error));\n  }\n}\n","import { User } from \"./user\";\r\n\r\nexport class UserParams{\r\n    gender: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User){\r\n        this.gender = user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}","<h2>\n    Admin Panel\n</h2>\n<div class=\"tab-panel\">\n    <tabset class=\"member-tabset\">\n        <tab heading=\"User management\" *appHasRole='[\"Admin\"]'>\n            <div class=\"container\">\n                <app-user-management>\n\n                </app-user-management>\n            </div>\n        </tab>\n        <tab heading=\"Photo management\" *appHasRole='[\"Admin\", \"Moderator\"]'>\n            <div class=\"container\">\n                <app-photo-management>\n                    \n                </app-photo-management>\n            </div>\n        </tab>\n    </tabset>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n\n  @ViewChild('editForm') editForm : NgForm;\n  member: Member;\n  user:User;\n\n  //acces browser events\n  @HostListener ('window:beforeunload',['$event']) unloadNotification($event: any){\n    if(this.editForm.dirty){\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private accountService: AccountService, \n     private memberService: MembersService, private toastr:ToastrService) { \n    //get user out of obesrvable\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember(){\n    this.memberService.getMember(this.user.username).subscribe(member =>{\n      this.member = member;\n    })\n  }\n\n  updateMember(){\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toastr.success('Profile updated successfully!');\n      this.editForm.reset(this.member);\n    })\n  }\n\n}\n","<div *ngIf=\"member\" class=\"row\">\n    <div class=\"col-4\">\n        <h1>Your profile!</h1>\n    </div>\n    <div class=\"col-8\">\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n            <strong>Information: You have made changes, any unsaved changes will be lost!</strong>\n        </div>\n    </div>\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\"\n                class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <div>\n                    <strong>Location:</strong>\n                    <p>{{member.city}}, {{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Age:</strong>\n                    <p>{{member.age}}</p>\n                </div>\n                <div>\n                    <strong>Last active:</strong>\n                    <p>{{member.lastActive | timeago}}</p>\n                </div>\n                <div>\n                    <strong>Member since:</strong>\n                    <p>{{member.created | date : 'dd MMMM yyyy'}}</p>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"btn-group d-flex\">\n                    <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Save changes</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\">\n            <tab heading='About {{member.knownAs}}'>\n                <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n                    <h4>Description</h4>\n                    <textarea [(ngModel)]=\"member.introduction\" name=\"introduction\" class=\"form-control\" rows=\"6\"></textarea>\n\n                    <h4 class=\"mt-2\">Looking for</h4>\n                    <textarea [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" class=\"form-control\" rows=\"6\"></textarea>\n\n                    <h4 class=\"mt-2\">Interests</h4>\n                    <textarea [(ngModel)]=\"member.interests\" name=\"interests\" class=\"form-control\" rows=\"6\"></textarea>\n\n                    <h4 class=\"mt-2\">Location details</h4>\n                    <div class=\"form-inline\">\n                        <label for=\"city\">City:</label>\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\n                        <label for=\"country\">Country:</label>\n                        <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\n                    </div>\n                </form>\n            </tab>\n            <tab heading='Edit Photos'>\n                <app-photo-editor [member]=\"member\"></app-photo-editor>\n            </tab>\n        </tabset>\n    </div>\n\n</div>","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PaginatedResult } from \"../_models/pagination\";\r\n\r\n\r\nexport function getPaginatedResult<T>(url, params, http : HttpClient) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n    return http.get<T>(url, { observe: 'response', params }).pipe(\r\n        map(response => {\r\n            paginatedResult.result = response.body;\r\n            if (response.headers.get('Pagination') !== null) {\r\n                paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n            }\r\n\r\n            return paginatedResult;\r\n        })\r\n    );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('pageNumber', pageNumber.toString())\r\n    params = params.append('pageSize', pageSize.toString());\r\n\r\n    return params;\r\n}","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n  constructor(private confirmService : ConfirmService){}\n\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if(component.editForm.dirty){\n      return this.confirmService.confirm();\n    }\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean;\n\n  constructor(public bsModelRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm(){\n    this.result = true;\n    this.bsModelRef.hide();\n  }\n\n  decline(){\n    this.result = false;\n    this.bsModelRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\n  </div>\n  <div class=\"modal-body\">\n      <p>{{message}}</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">\n        {{btnOkText}}\n    </button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">\n        {{btnCancelText}}\n    </button>\n  </div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AdminGuard } from './_guards/admin.guard';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\n\nconst routes: Routes = [\n  {path:'', component: HomeComponent},\n  {\n    /* protected routes by authentication */\n    path:'',\n    runGuardsAndResolvers:'always',\n    canActivate: [AuthGuard],\n    children:\n    [\n      {path:'members', component: MemberListComponent},\n      {path:'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\n      {path:'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]},\n      {path:'lists', component: ListsComponent},\n      {path:'messages', component: MessagesComponent},\n      {path:'admin', component: AdminPanelComponent, canActivate: [AdminGuard]},\n    ]\n  },\n  {path:'errors', component: TestErrorsComponent},\n  {path:'not-found', component: NotFoundComponent},\n  {path:'server-error', component: ServerErrorComponent},\n  {path:'**', component: HomeComponent, pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n\n  bsModelRef : BsModalRef;\n\n  constructor(private modalService : BsModalService) { }\n\n  confirm(title = 'Confirmarion', \n      message = 'Are you sure you want to do this?', \n      btnOkText = 'Ok', \n      btnCancelText = 'Cancel') : Observable<boolean>{\n        const config = {\n          initialState: {\n            title,\n            message,\n            btnOkText,\n            btnCancelText\n          }\n        }\n\n      this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\n\n      return new Observable<boolean>(this.getResult());\n    }\n\n    private getResult(){\n      return (observer) => {\n        const subscription = this.bsModelRef.onHidden.subscribe(() => {\n          observer.next(this.bsModelRef.content.result);\n          observer.complete();\n        });\n\n        return{\n          unsubscribe(){\n            subscription.unsubscribe();\n          }\n        }\n      }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user: User;\n  roles:any[];\n\n  constructor(public bsModalRef : BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles(){\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\n          <input type=\"checkbox\"\n            class=\"form-check-input\"\n            [checked]=\"role.checked\"\n            value=\"role.name\"\n            (change)=\"role.checked = !role.checked\"\n            [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\n          >\n          <label>{{role.name}}</label>\n        </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\n  </div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}